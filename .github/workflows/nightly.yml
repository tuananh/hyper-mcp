name: Nightly Release

on:
  schedule:
    - cron: '0 17 * * *' # midnight GMT+7
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-oci-images:
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            arch: amd64
          - os: ubuntu-24.04-arm
            arch: arm64
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      packages: write
      id-token: write # needed for keyless signing
    
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Install cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to DockerHub Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push hyper-mcp
        run: |
          echo "Building hyper-mcp image"
          ghcr_image="ghcr.io/${{ github.repository_owner }}/hyper-mcp:nightly-${{ matrix.arch }}"
          dockerhub_image="docker.io/tuananh/hyper-mcp:nightly-${{ matrix.arch }}"
          docker build -t $ghcr_image -t $dockerhub_image .

          docker push $ghcr_image
          docker push $dockerhub_image

          cosign sign --yes $ghcr_image
          cosign sign --yes $dockerhub_image

      # we dont need to build multi-arch plugin images as they are wasm32-wasip1
      # so we can just build amd64 and push it to the registry
      - name: Build and push plugin images
        if: matrix.arch == 'amd64'
        run: |
          for plugin in examples/plugins/*/; do
            plugin_name=$(basename $plugin)
            echo "Building plugin: $plugin_name"
            
            image_name="ghcr.io/${{ github.repository_owner }}/${plugin_name}-plugin:nightly"
            docker build -t $image_name $plugin
            docker push $image_name
            
            cosign sign --yes $image_name
          done

  # do this before we build nightly binaries
  prepare-nightly-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set nightly tag to latest main
        run: |
          git fetch origin main
          git tag -f nightly origin/main
          git push -f origin nightly

      - name: Delete existing nightly release
        run: gh release delete nightly --yes || true

  build-nightly-binaries:
    needs: prepare-nightly-release
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-24.04-arm
            arch: aarch64
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - run: cargo install cargo-auditable

      - name: Install compilation targets
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo auditable build --target ${{ matrix.target }} --release

      # TODO: figure out how to do cross build
      - name: Create archives and checksums
        run: |
          # Create directories for archives
          mkdir -p dist/${{ matrix.target }}
          
          cp target/${{ matrix.target }}/release/hyper-mcp dist/${{ matrix.target }}/
          cd dist/${{ matrix.target }} && tar -czf ../hyper-mcp-${{ matrix.target }}.tar.gz hyper-mcp
          cd ..
          
          {
            echo "hyper-mcp-${{ matrix.target }}.tar.gz:"
            if command -v sha256sum >/dev/null 2>&1; then
              sha256sum hyper-mcp-${{ matrix.target }}.tar.gz
            else
              shasum -a 256 hyper-mcp-${{ matrix.target }}.tar.gz
            fi
          } > checksums.txt

      - name: Create new nightly release
        id: create_release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          tag_name: nightly
          name: Nightly build
          draft: false
          prerelease: true
          files: |
            dist/hyper-mcp-${{ matrix.target }}.tar.gz
            dist/checksums.txt
          body: |
            Nightly build from `main` branch.
            
            This release includes:
            - hyper-mcp binaries for Linux & macOS
            - hyper-mcp container image: `ghcr.io/${{ github.repository_owner }}/hyper-mcp:nightly`
            - Plugin images: `ghcr.io/${{ github.repository_owner }}/<plugin-name>-plugin:nightly`
            
            All container images are signed with Cosign. Verify the image like this:
            ```bash
            cosign verify \
              --certificate-identity "https://github.com/tuananh/hyper-mcp/.github/workflows/nightly.yml@refs/heads/main" \
              --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
              ghcr.io/tuananh/hyper-mcp:nightly
            ```

  create-multiarch-manifests:
    needs: build-oci-images
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write # needed for keyless signing
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Install cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to DockerHub Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Create and push multi-arch nightly tags
        run: |
          # Main image
          docker buildx imagetools create \
            -t ghcr.io/${{ github.repository_owner }}/hyper-mcp:nightly \
            ghcr.io/${{ github.repository_owner }}/hyper-mcp:nightly-amd64 \
            ghcr.io/${{ github.repository_owner }}/hyper-mcp:nightly-arm64

          cosign sign --yes ghcr.io/${{ github.repository_owner }}/hyper-mcp:nightly

          # DockerHub
          docker buildx imagetools create \
            -t tuananh/hyper-mcp:nightly \
            tuananh/hyper-mcp:nightly-amd64 \
            tuananh/hyper-mcp:nightly-arm64

          cosign sign --yes tuananh/hyper-mcp:nightly
